ESTIMATE of time to complete assignment: 20 hours
      
       Start  Time
Date   Time   Spent  Work completed
-----  -----  ----   --------------
11/30  13:30  2:00   SIMPLE without redirection
11/30  15:30  1:00   redirection
11/30  18:00  1:30   piping (still broken)
12/01  08:30  0:45   local variables, status (simple)
12/01  09:15  1:15   cd
12/01  10:30  0:30   wait
12/01  12:30  1:00   backgrounding
12/01  15:00  2:00   Reaping zombies, ;, ||, &&
12/01  17:00  1:00   Reaping bug (assignment in conditional)
12/01  19:00  1:00   fflush bug (dirs), redirect bug (O_TRUNC)
12/01  20:00  0:30   subcommands (redirection, local variables)
12/01  20:30  0:30   refactoring local vars, redirection
12/01  21:00  1:00   piping
12/01  22:00  1:00   piping: wait for each stage
12/01  23:00  1:00   Bug: didn't use WEXITSTATUS consistently
12/02  00:00  1:00   Signal handling, tidying code

              ----
              16:30       TOTAL time spent

The toughness of this assignment came from the novelty
of thinking about multiple processes simultaneously, particularly
for pipelines. It took a while to figure out that in
a case like "$ yes | head", closing the pipe sends a signal
to the process running yes. Bugs were also difficult to 
track because of the multiple processes; in particular, 
in focusing on keeping track of processes during 
debugging, it took a while to realize that I was not
using the WEXITSTATUS macro consistently (using the
status given by waitpid() directly instead). It also was
confusing how stdout is buffered if not sent to the terminal.

